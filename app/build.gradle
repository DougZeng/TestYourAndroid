apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId "hibernate.v2.testyourandroid"
        minSdkVersion 19
        targetSdkVersion 27
        versionCode 100520
        versionName "5.2.0"
        multiDexEnabled true
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            buildConfigField "String", "ADMOB_KEY", "\"" + getSecretKey("ADMOB_KEY") + "\""
            buildConfigField "String[]", "DEVICE_ID", getSecretKey("DEVICE_ID")
            resValue "string", "GOOGLE_API_KEY", "\"" + getSecretKey("GOOGLE_API_KEY") + "\""
            buildConfigField "String", "GOOGLE_IAP_KEY", "\"" + getSecretKey("GOOGLE_IAP_KEY") + "\""
            buildConfigField "String", "GA_TRACKING_ID", "\"" + getSecretKey("GA_TRACKING_ID") + "\""
        }
        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "ADMOB_KEY", "\"" + getSecretKey("ADMOB_KEY") + "\""
            buildConfigField "String[]", "DEVICE_ID", getSecretKey("DEVICE_ID")
            resValue "string", "GOOGLE_API_KEY", "\"" + getSecretKey("GOOGLE_API_KEY") + "\""
            buildConfigField "String", "GOOGLE_IAP_KEY", "\"" + getSecretKey("GOOGLE_IAP_KEY") + "\""
            buildConfigField "String", "GA_TRACKING_ID", "\"" + getSecretKey("GA_TRACKING_ID") + "\""
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }
}

static def getSecretKey(name) {
    Properties props = new Properties()
    File f = new File('./../Key/testyourandroid.secrets.properties')
    if (f.exists()) {
        props.load(new FileInputStream(f))
        return props[name]
    } else {
        return name
    }
}

dependencies {
    // Google Android Support
    compile 'com.android.support:multidex:1.0.2'
    compile 'com.android.support:appcompat-v7:27.0.2'
    compile 'com.android.support:support-v4:27.0.2'
    compile 'com.android.support:design:27.0.2'
    compile 'com.android.support:cardview-v7:27.0.2'
    compile 'com.android.support:recyclerview-v7:27.0.2'

    // Google Play Services
    compile 'com.google.android.gms:play-services-ads:11.8.0'
    compile 'com.google.android.gms:play-services-analytics:11.8.0'
    compile 'com.google.android.gms:play-services-maps:11.8.0'
    compile 'com.google.android.gms:play-services-location:11.8.0'
    compile 'com.google.android.gms:play-services-wearable:11.8.0'

    // RxBinding Butter Knife
    compile 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    // Material Dialog
    compile 'com.afollestad.material-dialogs:core:0.9.6.0'

    // Roboto TextView
    compile 'com.github.johnkil.android-robototextview:robototextview:4.0.0'

    // Glide
    compile 'com.github.bumptech.glide:glide:4.0.0'

    // License Dialog
    compile 'de.psdev.licensesdialog:licensesdialog:1.8.2'

    // GraphView
    compile files('libs/graphview.jar')

    // Simple IAB
    compile 'com.anjlab.android.iab.v3:library:1.0.44'

    // SmallBang
    compile 'hanks.xyz:smallbang-library:0.1.2'

    // MaterialScrollBar must be 11.2.1
    //noinspection GradleDependency
    compile 'com.github.turing-tech:MaterialScrollBar:11.2.1'

    // Apache Commons Lang
    compile 'org.apache.commons:commons-lang3:3.5'

    // AppBrain SDK
    compile 'com.appbrain:appbrain-sdk:+@aar'

    wearApp project(':wear')
}
